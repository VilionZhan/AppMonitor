<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="appMonitor.mapper.AppUserMapper">
  <resultMap id="BaseResultMap" type="appMonitor.domain.AppUser">
    <id column="USER_PHONE" jdbcType="INTEGER" property="userPhone" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_PASSWORD" jdbcType="VARCHAR" property="userPassword" />
    <result column="USER_POWER" jdbcType="VARCHAR" property="userPower" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="REGISTER_DATE" jdbcType="DATE" property="registerDate" />
    <result column="EXT1" jdbcType="VARCHAR" property="ext1" />
    <result column="EXT2" jdbcType="VARCHAR" property="ext2" />
    <result column="EXT3" jdbcType="VARCHAR" property="ext3" />
  </resultMap>
  <sql id="Base_Column_List">
    USER_PHONE, USER_NAME, USER_PASSWORD, USER_POWER, EMAIL, REGISTER_DATE, EXT1, EXT2, 
    EXT3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_user
    where USER_PHONE = #{userPhone,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from app_user
    where USER_PHONE = #{userPhone,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="appMonitor.domain.AppUser">
    insert into app_user (USER_PHONE, USER_NAME, USER_PASSWORD, 
      USER_POWER, EMAIL, REGISTER_DATE, 
      EXT1, EXT2, EXT3)
    values (#{userPhone,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userPower,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{registerDate,jdbcType=DATE}, 
      #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="appMonitor.domain.AppUser">
    insert into app_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userPhone != null">
        USER_PHONE,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userPassword != null">
        USER_PASSWORD,
      </if>
      <if test="userPower != null">
        USER_POWER,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="registerDate != null">
        REGISTER_DATE,
      </if>
      <if test="ext1 != null">
        EXT1,
      </if>
      <if test="ext2 != null">
        EXT2,
      </if>
      <if test="ext3 != null">
        EXT3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userPhone != null">
        #{userPhone,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPower != null">
        #{userPower,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=DATE},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        #{ext3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="appMonitor.domain.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_user
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPower != null">
        USER_POWER = #{userPower,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        REGISTER_DATE = #{registerDate,jdbcType=DATE},
      </if>
      <if test="ext1 != null">
        EXT1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        EXT2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        EXT3 = #{ext3,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_PHONE = #{userPhone,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="appMonitor.domain.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      USER_POWER = #{userPower,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      REGISTER_DATE = #{registerDate,jdbcType=DATE},
      EXT1 = #{ext1,jdbcType=VARCHAR},
      EXT2 = #{ext2,jdbcType=VARCHAR},
      EXT3 = #{ext3,jdbcType=VARCHAR}
    where USER_PHONE = #{userPhone,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="USER_NAME = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.userName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="USER_PASSWORD = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.userPassword,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="USER_POWER = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.userPower,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="EMAIL = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.email,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="REGISTER_DATE = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.registerDate,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="EXT1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.ext1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="EXT2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.ext2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="EXT3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when USER_PHONE = #{item.userPhone,jdbcType=INTEGER} then #{item.ext3,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where USER_PHONE in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userPhone,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into app_user
    (USER_PHONE, USER_NAME, USER_PASSWORD, USER_POWER, EMAIL, REGISTER_DATE, EXT1, EXT2, 
      EXT3)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userPhone,jdbcType=INTEGER}, #{item.userName,jdbcType=VARCHAR}, #{item.userPassword,jdbcType=VARCHAR}, 
        #{item.userPower,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.registerDate,jdbcType=DATE}, 
        #{item.ext1,jdbcType=VARCHAR}, #{item.ext2,jdbcType=VARCHAR}, #{item.ext3,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="appMonitor.domain.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into app_user
    (USER_PHONE, USER_NAME, USER_PASSWORD, USER_POWER, EMAIL, REGISTER_DATE, EXT1, EXT2, 
      EXT3)
    values
    (#{userPhone,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userPower,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{registerDate,jdbcType=DATE}, 
      #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR})
    on duplicate key update 
    USER_PHONE = #{userPhone,jdbcType=INTEGER}, 
    USER_NAME = #{userName,jdbcType=VARCHAR}, 
    USER_PASSWORD = #{userPassword,jdbcType=VARCHAR}, 
    USER_POWER = #{userPower,jdbcType=VARCHAR}, 
    EMAIL = #{email,jdbcType=VARCHAR}, 
    REGISTER_DATE = #{registerDate,jdbcType=DATE}, 
    EXT1 = #{ext1,jdbcType=VARCHAR}, 
    EXT2 = #{ext2,jdbcType=VARCHAR}, 
    EXT3 = #{ext3,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="appMonitor.domain.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into app_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userPhone != null">
        USER_PHONE,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userPassword != null">
        USER_PASSWORD,
      </if>
      <if test="userPower != null">
        USER_POWER,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="registerDate != null">
        REGISTER_DATE,
      </if>
      <if test="ext1 != null">
        EXT1,
      </if>
      <if test="ext2 != null">
        EXT2,
      </if>
      <if test="ext3 != null">
        EXT3,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userPhone != null">
        #{userPhone,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPower != null">
        #{userPower,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=DATE},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        #{ext3,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userPhone != null">
        USER_PHONE = #{userPhone,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPower != null">
        USER_POWER = #{userPower,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        REGISTER_DATE = #{registerDate,jdbcType=DATE},
      </if>
      <if test="ext1 != null">
        EXT1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        EXT2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        EXT3 = #{ext3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>